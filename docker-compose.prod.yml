version: '3.8'
services:

  #PHP Service
  app:
    build:
      context: .
      dockerfile: ./docker/app/Dockerfile
    container_name: app
    command: bash -c "/usr/local/bin/wait-for-it-bash db:3306 -- /usr/local/bin/start"
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: prod
      APP_ENV: production
      APP_KEY: ${APP_KEY}
      APP_DEBUG: "false"
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - ./docker/app/php.ini:/usr/local/etc/php/conf.d/local.ini
    #  - app_public:/var/www/public
    depends_on:
      - db
    networks:
      - app-network
    labels:
      ofelia.enabled: "true"
      ofelia.job-exec.datecron.schedule: "@every 60s"
      ofelia.job-exec.datecron.command: "php /var/www/html/artisan schedule:run --verbose --no-interaction"

  #Nginx Service
  webserver:
    image: nginx:mainline-alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www/html
     # - app_public:/var/www/html/public
      - ./docker/nginx/conf.d/app.prod.conf:/etc/nginx/conf.d/default.conf
    networks:
      - app-network
      
  #MySQL Service
  db:
    image: mysql:8.0.21
    container_name: db
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    tty: true
    #ports:
    #  - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      SERVICE_TAGS: prod
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql
      - ./docker/mysql/my.prod.cnf:/etc/mysql/my.cnf
    networks:
      - app-network

  #Redis Service
  redis:
    command: redis-server --appendonly no
    image: redis:6.0.8-alpine
    container_name: redis
    restart: unless-stopped
    #ports:
    #  - "6379:6379"
    healthcheck:
      test: redis-cli ping | grep -q 'PONG' || exit 1
      interval: 3s
      timeout: 10s
      retries: 30
      start_period: 60s
    volumes:
    - redisdata:/data
    networks:
      - app-network

  # Queue
  queue:
    build:
      context: .
      dockerfile: ./docker/queue/queue.dockerfile
    container_name: queue
    command: sh -c "/usr/local/bin/wait-for-it-shell app:9000 -- php /var/www/html/artisan horizon"
    restart: unless-stopped
    volumes:
      - ./:/var/www/html
    depends_on:
      redis:
        condition: service_healthy
      api:
        condition: service_started
    networks:
      - app-network
      - ./docker/queue/php.ini:/usr/local/etc/php/conf.d/local.ini

  #Scheduler
  scheduler:
    image: mcuadros/ofelia:latest
    container_name: scheduler
    depends_on:
      - app
    command: daemon --docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

#Docker Networks
networks:
  app-network:
    driver: bridge

#Volumes
volumes:
  dbdata:
    driver: local
  redisdata:
    driver: local
