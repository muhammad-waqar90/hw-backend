version: '3.8'
services:

  #PHP Service
  api:
    build:
      context: .
      dockerfile: ./docker/api/Dockerfile
    container_name: api
    command: bash -c "/usr/local/bin/wait-for-it-bash db:3306 -- /usr/local/bin/start"
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: api
      SERVICE_TAGS: dev
      HAS_APP_KEY: ${APP_KEY}
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - ./docker/api/php.ini:/usr/local/etc/php/conf.d/local.ini
    depends_on:
      - db
    networks:
      - app-network

  #Nginx Service
  webserver:
    image: nginx:mainline-alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/conf.d/app.conf:/etc/nginx/conf.d/default.conf
      - phpmyadmin_data:/var/www/phpmyadmin/
    networks:
      - app-network

  #MySQL Service
  db:
    image: mysql:8.0.21
    # platform: linux/amd64 #required apple/amd chip
    container_name: db
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    tty: true
    #ports:
    #  - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql
      - ./docker/mysql/my.local.cnf:/etc/mysql/my.cnf
    networks:
      - app-network

  #MySQL test Service
  dbtest:
    image: mysql:8.0.21
    # platform: linux/amd64 #required apple/amd chip
    container_name: dbtest
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    tty: true
    #ports:
    #  - "3308:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdatatest:/var/lib/mysql
      - ./docker/mysql/my.local.cnf:/etc/mysql/my.cnf
    networks:
      - app-network

  #Redis Service
  redis:
    command: redis-server --appendonly no
    image: redis:6.2.4-alpine
    container_name: redis
    restart: unless-stopped
    #ports:
    #  - "6379:6379"
    volumes:
      - redisdata:/data
    networks:
      - app-network

  #Queue
  queue:
    build:
      context: .
      dockerfile: ./docker/queue/queue.dockerfile
    container_name: queue
    command: sh -c "/bin/sleep 10 && /usr/local/bin/wait-for-it-shell api:9000 -- php /var/www/html/artisan horizon"
    restart: unless-stopped
    volumes:
      - ./:/var/www/html
      - ./docker/queue/php.ini:/usr/local/etc/php/conf.d/local.ini
    depends_on:
      - redis
      - api
    networks:
      - app-network

  #PHPMyAdmin Service
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:fpm-alpine
    # platform: linux/amd64 #required apple/amd chip
    container_name: phpmyadmin
    restart: unless-stopped
    environment:
      PMA_ABSOLUTE_URI: ${APP_URL}/phpmyadmin/
    volumes:
      - phpmyadmin_data:/var/www/html/
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge

#Volumes
volumes:
  dbdata:
    driver: local
  dbdatatest:
    driver: local
  redisdata:
    driver: local
  phpmyadmin_data:
    driver: local
